# Implement your pre-install deployment tasks here
# -------------------------------------------------

- name: Determine cluster base domain
  k8s_info:
    api_version: config.openshift.io/v1
    kind: Ingress
    name: cluster
  register: r_ingress_config
  failed_when: r_ingress_config.resources | length < 1

- name: Register cluster base domain
  set_fact:
    cluster_base_domain: "{{ r_ingress_config.resources[0].spec.domain }}"

- name: Retrieve GitLab private token
  kubernetes.core.k8s_info:
    api_version: v1
    kind: Secret
    name: root-user-personal-token
    namespace: gitlab
  register: r_root_token
  retries: 120
  delay: 10
  until:
  - r_root_token is defined
  - r_root_token.resources is defined
  - r_root_token.resources | length > 0
  - r_root_token.resources[0] is defined
  - r_root_token.resources[0].data is defined
  - r_root_token.resources[0].data.token is defined
  - r_root_token.resources[0].data.token | length > 0

- name: Decode GitLab token
  ansible.builtin.set_fact:
    gitlab_token: "{{ r_root_token.resources[0].data.token | b64decode }}"

- name: Retrieve quay admin token
  kubernetes.core.k8s_info:
    api_version: v1
    kind: Secret
    name: quay-admin-token
    namespace: quay-enterprise
  register: r_quay_token
  retries: 120
  delay: 10
  until:
  - r_quay_token is defined
  - r_quay_token.resources is defined
  - r_quay_token.resources | length > 0
  - r_quay_token.resources[0] is defined

- name: Decode quay admin token
  ansible.builtin.set_fact:
    quay_api_token: "{{ r_quay_token.resources[0].data.token | b64decode }}"

- name: Get default token
  ansible.builtin.shell: >-
    set -o pipefail && oc get secret $(oc get secret -n default | grep default-token | awk '{print $1}') -n default -o json | jq -r '.data.token'
  register: r_default_token

- name: Decode default token
  ansible.builtin.set_fact:
    service_account_token: "{{ r_default_token.stdout | b64decode }}"

# Leave these as the last tasks in the playbook
- name: pre_install tasks complete
  debug:
    msg: "Pre-Install tasks completed successfully."
  when:
    - not silent|bool
