apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: rhivos-template
  title: Build RHIVOS
  description: Build the Red Hat In-Vehicle OS
  tags:
    - automotive
spec:
  owner: automotive
  type: service

  parameters:
    - title: Provide basic information for the build
      required:
        - artifact_id
        - manifest_name
        - manifest_location
      properties:
        artifact_id:
          title: Artifact Id
          type: string
          default: devel-build
          description: RHIVOS Artifact Id
          maxLength: 40
          pattern: "^([a-zA-Z][a-zA-Z0-9]*)(-[a-zA-Z0-9]+)*$"
        description:
          title: Description
          type: string
          description: Help others understand what this RHIVOS build is for.
          default: RHIVOS development image
        manifest_name:
          title: Manifest
          type: string
          description: Name of the manifest file
          default: devel
          maxLength: 40
          pattern: "^([a-zA-Z][a-zA-Z0-9]*)(-[a-zA-Z0-9]+)*$"
        manifest_location:
          title: Location
          type: string
          default: ./manifests
          description: Manifest file location

    - title: Build parameters
      required:
        - distro
        - arch
        - target
        - mode
        - export_format
      properties:
        distro:
          title: Distro
          type: string
          default: autosd
          enum:
            - autosd
            - cs9
        arch:
          title: Architecture
          type: string
          default: aarch64
          enum:
            - aarch64
            - x86_64
        target:
          title: Target
          type: string
          default: rpi4
          enum:
            - rpi4
            - qemu
        mode:
          title: Package Mode
          type: string
          default: package
          enum:
            - package
            - image
        export_format:
          title: Export Format
          type: string
          default: image
          enum:
            - image
            - qcow2
            - container

    - title: Provide basic information for the build environment
      required:
        - base_domain
        - repo
      properties:
        base_domain:
          title: Cluster Base Domain
          type: string
          description: Base domain of the cluster, e.g. cluster-zgzkk.zgzkk.sandbox2007.opentlc.com
          default: cluster-...
          ui:help: 'Hint: find the base domain in the URL above'
        repo:
          title: Repository Location
          type: object
          properties:
            host:
              title: Repo Host
              type: string
              description: Your SCM host
              default: gitlab-gitlab.apps.cluster-
            owner:
              title: Repo Owner
              type: string
              description: Your SCM host organization/group
              default: development
              enum:
                - development

  steps:
    - id: template
      name: Fetch Skeleton + Template
      action: fetch:template
      input:
        url: ./skeleton
        copyWithoutTemplating:
          - .github/workflows/*
        values:
          artifact_id: ${{ parameters.artifact_id }}
          description: ${{ parameters.description }}
          namespace: ${{ parameters.artifact_id }}-dev
          owner: ${{ user.entity.metadata.name }}
          cluster: .apps.${{ parameters.base_domain }}
          host: ${{ parameters.repo.host }}
          destination: ${{ parameters.repo.owner }}/${{ parameters.artifact_id }}
          manifest_name: ${{ parameters.manifest_name }}
          manifest_location: ${{ parameters.manifest_location }}
          distro: ${{ parameters.distro }}
          arch: ${{ parameters.arch }}
          target: ${{ parameters.target }}
          mode: ${{ parameters.mode }}
          export_format: ${{ parameters.export_format }}

    - id: publish
      name: Publish
      action: publish:gitlab
      input:
        repoUrl: "${{ parameters.repo.host }}?owner=${{ parameters.repo.owner }}&repo=${{parameters.artifact_id}}"
        repoVisibility: public

    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps.publish.output.repoContentsUrl }}
        catalogInfoPath: "/catalog-info.yaml"

  output:
    links:
      - title: Source Code Repository
        url: ${{ steps.publish.output.remoteUrl }}
      - title: Open Component in catalog
        icon: catalog
        entityRef: ${{ steps.register.output.entityRef }}
