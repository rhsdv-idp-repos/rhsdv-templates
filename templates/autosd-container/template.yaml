apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: autosd-container-template
  title: Build AutoSD Container
  description: Create a container image based on AutoSD
  tags:
    - automotive
    - autosd
    - container
spec:
  owner: automotive
  type: service

  parameters:
    - title: Provide Project Information
      required:
        - artifact_id
        - arch
      properties:
        artifact_id:
          title: Artifact Id
          type: string
          default: autosd-container-build
          maxLength: 40
          pattern: "^([a-zA-Z][a-zA-Z0-9]*)(-[a-zA-Z0-9]+)*$"
          description: The unique ID used for creating assets.
        arch:
          title: Architecture
          type: string
          default: x86_64
          enum:
            - aarch64
            - x86_64
        description:
          title: Description
          type: string
          default: AutoSD container image build
          description: Help others understand what this container is for.

    - title: Provide Build Environment Information
      required:
        - base_domain
        - repo
        - verify_commits
      properties:
        base_domain:
          title: Cluster Base Domain
          type: string
          description: Base domain of the cluster, e.g. cluster-zgzkk.zgzkk.sandbox2007.opentlc.com
          default: cluster-...
          ui:help: "Hint: find the base domain in the URL above"
        repo:
          title: Repository Location
          type: object
          properties:
            host:
              title: Repo Host
              type: string
              description: Your SCM host
              default: gitlab-gitlab.apps.cluster-
              ui:help: "Hint: apply the same host as your cluster base domain"
            owner:
              title: Repo Owner Group
              type: string
              description: Your SCM host organization/group
              default: development
              enum:
                - development
        verify_commits:
          title: Verify Commits
          type: string
          description: Verify Git repository commits using Red Hatâ€™s Trusted Artifact Signer (TAS) service
          default: disabled
          enum:
            - enabled
            - disabled

    - title: Provide Image Registry Information
      required:
        - image_registry
      properties:
        image_registry:
          title: Image Registry
          type: string
          enum:
            - Openshift
            - Quay
      dependencies:
        image_registry:
          oneOf:
            - properties:
                image_registry:
                  enum:
                    - Openshift
                image_host:
                  title: Image Host
                  type: string
                  description: Host for storing image
                  default: image-registry.openshift-image-registry.svc:5000
                image_tag:
                  title: Image Tag
                  default: latest
                  type: string
                  description: Build Image tag
            - properties:
                image_registry:
                  enum:
                    - Quay
                image_host:
                  title: Image Host
                  type: string
                  description: Host for storing image
                  default: quay-xdrl6.apps.cluster-xdrl6...
                image_organization:
                  title: Organization
                  type: string
                  description: Name of the Quay Organization
                  default: quayadmin
                image_tag:
                  title: Image Tag
                  default: latest
                  type: string
                  description: Build Image tag

  steps:
    - id: template
      name: Fetch Skeleton + Template
      action: fetch:template
      input:
        url: ./skeleton
        copyWithoutTemplating:
          - .github/workflows/*
        values:
          artifact_id: ${{ parameters.artifact_id }}
          arch: ${{ parameters.arch }}
          description: ${{ parameters.description }}
          namespace: ${{ parameters.artifact_id }}-dev
          owner: ${{ user.entity.metadata.name }}
          cluster: .apps.${{ parameters.base_domain }}
          host: ${{ parameters.repo.host }}
          destination: ${{ parameters.repo.owner }}/${{ parameters.artifact_id }}
          verify_commits: "${{ parameters.repo.verify_commits }}"
          quay_destination: ${{ parameters.image_organization}}/${{ parameters.artifact_id }}

    - id: publish
      name: Publish Source
      action: publish:gitlab
      input:
        repoUrl: "${{ parameters.repo.host }}?owner=${{ parameters.repo.owner }}&repo=${{parameters.artifact_id}}"
        defaultBranch: main
        repoVisibility: public

    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps.publish.output.repoContentsUrl }}
        catalogInfoPath: "/catalog-info.yaml"

    - id: template-gitops-deployment
      name: Generating Deployment Resources
      action: fetch:template
      input:
        url: ./manifests
        copyWithoutTemplating: []
        values:
          artifact_id: ${{ parameters.artifact_id }}
          arch: ${{ parameters.arch }}
          description: ${{ parameters.description }}
          
          destination: "https://${{ parameters.repo.host }}/${{ parameters.repo.owner }}/${{parameters.artifact_id}}-gitops.git"
          source_repository: "https://${{ parameters.repo.host }}/${{ parameters.repo.owner }}/${{parameters.artifact_id}}.git"
          repository_name: ${{parameters.artifact_id}}
          repository_host: ${{ parameters.repo.host }}
          git_owner: ${{ parameters.repo.owner }}

          image_registry: ${{ parameters.image_registry }}
          image_host: ${{ parameters.image_host }}
          image_organization: ${{ parameters.image_organization }}
          image_name: ${{ parameters.artifact_id }}
          image_tag: ${{ parameters.image_tag }}

          cluster: .apps.${{ parameters.base_domain }}
          user: ${{ user.entity.metadata.name }}
          deployment_name: autosd-container-template

          verify_commits: ${{ parameters.repo.verify_commits }}

        targetPath: ./tenant-gitops

    - id: publish-gitops
      name: Publishing GitOps Code
      action: publish:gitlab
      input:
        repoUrl: "${{ parameters.repo.host }}?owner=${{ parameters.repo.owner }}&repo=${{parameters.artifact_id}}-gitops"
        sourcePath: ./tenant-gitops
        defaultBranch: main
        repoVisibility: public

    - id: create-gitops-resources
      name: Create GitOps Resources
      action: argocd:create-resources
      input:
        appName: "${{ parameters.artifact_id }}-bootstrap"
        argoInstance: main
        namespace: janus-argocd
        repoUrl: https://${{ parameters.repo.host }}/${{ parameters.repo.owner }}/${{ parameters.artifact_id }}-gitops.git
        path: 'gitops/'

  output:
    links:
      - title: Source Code Repository
        url: ${{ steps.publish.output.remoteUrl }}
      - title: Open Component in catalog
        icon: catalog
        entityRef: ${{ steps.register.output.entityRef }}
